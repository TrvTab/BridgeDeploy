{"version":3,"sources":["logo.svg","components/dictaphone.js","components/players/player.js","components/Loop.js","components/LoopForm.js","components/LoopList.js","components/Marker.js","components/MarkerForm.js","components/MarkerList.js","components/InfoModal.js","App.js","reportWebVitals.js","index.js"],"names":["Dictaphone","props","useState","request","name","firstTimeStamp","secondTimeStamp","message","setMessage","commands","command","callback","min","sec","toLowerCase","length","firstMin","firstSec","secondMin","secondSec","useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","useEffect","sendToPlayer","onClick","SpeechRecognition","startListening","stopListening","Player","state","url","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","dictaphoneData","inLoop","handlePlayPause","setState","handleDictaphoneData","childData","vocalSkipForward","vocalSkipBackwards","vocalRestart","vocalExitLoop","vocalPassInfoToApp","load","handleStop","handleToggleControls","handleToggleLight","handleToggleLoop","handleVolumeChange","e","parseFloat","target","value","handleToggleMuted","handleSetPlaybackRate","handleOnPlaybackRateChange","speed","handleTogglePIP","handlePlay","console","log","handleEnablePIP","handleDisablePIP","handlePause","handleSeekMouseDown","seeking","handleSeekChange","handleSeekMouseUp","player","seekTo","handleSkipForwardClick","getCurrentTime","parseInt","handleSkipBackwardClick","handleProgress","handleEnded","handleDuration","renderLoadButton","label","ref","time","this","commandData","onCommandChange","arr","split","minutes","seconds","totalSeconds","prevProps","reply","convertToSeconds","startTime","endTime","className","onReady","onStart","onPlay","onEnablePIP","onDisablePIP","onPause","onBuffer","onPlaybackRateChange","onSeek","onEnded","onError","onProgress","onDuration","Container","Row","Col","lg","md","type","max","step","style","width","onMouseDown","onChange","onMouseUp","id","selected","marginTop","for","marginRight","input","urlInput","placeholder","Component","Loop","title","colour","LoopForm","submitLoop","onCancelLoop","setTitle","setStartTime","setEndTime","Form","onSubmit","preventDefault","handleSubmit","Group","Label","Control","as","Button","LoopList","loopItems","setLoopItems","showForm","setShowForm","handleRemove","key","filter","item","CloseButton","commandInformation","includes","sampleItem","find","foundItem","children","foundItemCopy","Object","assign","onFoundTimeElement","handleGoToLoop","height","float","Marker","MarkerForm","submitMarker","onCancelMarker","setTime","MarkerList","markerItems","setMarkerItems","handleGoToMarker","InfoModal","Modal","size","centered","Header","closeButton","Title","Body","Footer","onHide","App","fullscreenLandingPage","showLandingPage","setShowLandingPage","setUrl","setUrlInput","setCommandState","setReplyState","infoModalShow","setInfoModalShow","handleFoundTimeElement","show","fullscreen","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9525bbee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//import React from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useState, useEffect } from 'react'\n\n\nfunction Dictaphone(props) {\n\n  const [message, setMessage] = useState({\n    request: '',\n    name: '',\n    firstTimeStamp: '',\n    secondTimeStamp: ''\n  })\n\n  const commands = [\n\n    //Add marker and loop with name\n    {\n      command: 'add marker called :name at :min minutes and :sec seconds',\n      callback: (name, min, sec) => setMessage({request: 'addMarker', name: name.toLowerCase(), firstTimeStamp: (min + \":\" + (sec.length===1 ? \"0\" + sec : sec))})\n    },\n    {\n      command: 'Add loop called :name from :firstMin minutes and :firstSec seconds until :secondMin minutes and :secondSec seconds',\n      callback: (name, firstMin, firstSec, secondMin, secondSec) => \n          setMessage({request: 'addLoop', name: name.toLowerCase(), firstTimeStamp: (firstMin + \":\" + (firstSec.length===1 ? \"0\" + firstSec : firstSec)), secondTimeStamp: (secondMin + \":\" + (secondSec.length===1 ? \"0\" + secondSec : secondSec))})\n    },\n    //Delete marker and loop \n    {\n      command: 'Delete marker called :name',\n      callback: (name) => \n          setMessage({request: 'delMarker', name: name.toLowerCase()})\n    },\n    {\n      command: 'Delete loop called :name',\n      callback: (name) => \n          setMessage({request: 'delLoop', name: name.toLowerCase()})\n    },\n    {\n      command: 'skip forward',\n      callback: () =>\n          setMessage({request: 'skipFwd'})\n    },\n    {\n      command: 'skip backwards',\n      callback: () =>\n          setMessage({request: 'skipBwd'})\n    },\n    {\n      command: 'restart',\n      callback: () =>\n          setMessage({request: 'restart'})\n    },\n    {\n      command: 'go to marker :name',\n      callback:(name) => setMessage({request: 'goToMarker', name: name.toLowerCase()})\n    },\n    {\n      command: 'go to loop :name',\n      callback:(name) => setMessage({request: 'goToLoop', name: name.toLowerCase()})\n    },\n    {\n      command: 'exit loop',\n      callback: () => setMessage({request: \"exitLoop\"})\n    },\n    {\n      command: 'pause',\n      callback: () => setMessage({request: 'pause'})\n    },\n    {\n      command: 'play',\n      callback: () => setMessage({request: 'play'})\n    }\n\n  ]\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition({commands});\n  \n  \n  function handleTranscriptChange(event){\n    console.log(event.target.value)\n  }\n\n  // Everytime message is updated, reset it and send data to parent\n  useEffect(() => {\n    props.sendToPlayer(message)\n    resetTranscript()\n\n    return () => {\n      resetTranscript()\n    }\n  }, [message])\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n\n  return (\n    <div>\n      <p>Microphone: {listening ? 'on' : 'off'}</p>\n      <button onClick={SpeechRecognition.startListening}>Start</button>\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\n      <button onClick={resetTranscript}>Reset</button>\n      <p>{transcript}</p>\n    </div>\n  );\n};\nexport default Dictaphone;","/*\nThe MIT License\nCopyright © Pete Cook http://cookpete.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nimport React, { Component } from 'react'\nimport { findDOMNode } from 'react-dom'\nimport Dictaphone from '../dictaphone'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './player.css'\n\nimport { updateAndNotify } from 'react'\n\n\n\nimport { version } from '../../../package.json'\nimport ReactPlayer from 'react-player/lazy'\nimport Duration from './duration'\n\nclass Player extends Component {\n  state = {\n    url: null,\n    pip: false,\n    playing: true,\n    controls: false,\n    light: false,\n    volume: 0.8,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false,\n    dictaphoneData: [],\n    inLoop: false\n  }\n\n  vocalSkipForward(time){\n    this.player.seekTo(this.player.getCurrentTime() + time, \"seconds\")\n  }\n  vocalSkipBackwards(time){\n    this.player.seekTo(this.player.getCurrentTime() - time, \"seconds\")\n  }\n\n  vocalPassInfoToApp(commandData) {\n    this.props.onCommandChange(commandData)\n  }\n\n  vocalRestart(){\n    this.player.seekTo(0, \"seconds\")\n  }\n\n  vocalExitLoop() {\n    this.setState({inLoop: false})\n  }\n\n  handlePlayPause = () => {\n    this.setState({ playing: !this.state.playing })\n  }\n\n\n  // add if statements for \n  handleDictaphoneData = (childData) => {\n    this.setState(() => {\n      return {\n        dictaphoneData: childData\n      }\n    })\n    if (childData.request === \"skipFwd\") this.vocalSkipForward(15);\n    else if (childData.request === \"skipBwd\") this.vocalSkipBackwards(15);\n    else if (childData.request === \"restart\") this.vocalRestart();\n    else if (childData.request === \"exitLoop\") this.vocalExitLoop();\n    else if (childData.request === \"pause\") this.handlePlayPause()\n    else if (childData.request === \"play\") this.handlePlayPause()\n    else if (childData.request === \"addMarker\") this.vocalPassInfoToApp(childData);\n    else if (childData.request === \"addLoop\") this.vocalPassInfoToApp(childData)\n    else if (childData.request === 'delMarker') this.vocalPassInfoToApp(childData)\n    else if (childData.request === \"delLoop\") this.vocalPassInfoToApp(childData);\n    else if (childData.request === \"restart\") this.vocalPassInfoToApp(childData);\n    else if (childData.request === \"goToMarker\") this.vocalPassInfoToApp(childData)\n    else if (childData.request === \"goToLoop\") this.vocalPassInfoToApp(childData)\n    \n  }\n  \n\n  load = url => {\n    this.setState({\n      url,\n      played: 0,\n      loaded: 0,\n      pip: false\n    })\n  }\n\n  \n\n  handleStop = () => {\n    this.setState({ url: null, playing: false })\n  }\n\n  handleToggleControls = () => {\n    const url = this.state.url\n    this.setState({\n      controls: !this.state.controls,\n      url: null\n    }, () => this.load(url))\n  }\n\n  handleToggleLight = () => {\n    this.setState({ light: !this.state.light })\n  }\n\n  handleToggleLoop = () => {\n    this.setState({ loop: !this.state.loop })\n  }\n\n  handleVolumeChange = e => {\n    this.setState({ volume: parseFloat(e.target.value) })\n  }\n\n  handleToggleMuted = () => {\n    this.setState({ muted: !this.state.muted })\n  }\n\n  handleSetPlaybackRate = e => {\n    this.setState({ playbackRate: parseFloat(e.target.value) })\n  }\n\n  handleOnPlaybackRateChange = (speed) => {\n    this.setState({ playbackRate: parseFloat(speed) })\n  }\n\n  handleTogglePIP = () => {\n    this.setState({ pip: !this.state.pip })\n  }\n\n  handlePlay = () => {\n    console.log('onPlay')\n    this.setState({ playing: true })\n  }\n\n  handleEnablePIP = () => {\n    console.log('onEnablePIP')\n    this.setState({ pip: true })\n  }\n\n  handleDisablePIP = () => {\n    console.log('onDisablePIP')\n    this.setState({ pip: false })\n  }\n\n  handlePause = () => {\n    console.log('onPause')\n    this.setState({ playing: false })\n  }\n\n  handleSeekMouseDown = e => {\n    this.setState({ seeking: true })\n  }\n\n  handleSeekChange = e => {\n    this.setState({ played: parseFloat(e.target.value) })\n  }\n\n  handleSeekMouseUp = e => {\n    this.setState({ seeking: false })\n    \n    this.player.seekTo(parseFloat(e.target.value))\n  }\n\n  handleSkipForwardClick= e => {\n    this.player.seekTo(this.player.getCurrentTime() + parseInt(e.target.value), \"seconds\")\n  }\n\n  handleSkipBackwardClick = e => {\n    console.log(e)\n    this.player.seekTo(this.player.getCurrentTime() - parseInt(e.target.value), \"seconds\")\n  }\n\n  handleProgress = state => {\n   // console.log('onProgress', state)\n    // We only want to update time slider if we are not currently seeking\n    if (!this.state.seeking) {\n      this.setState(state)\n    }\n  }\n\n  handleEnded = () => {\n    console.log('onEnded')\n    this.setState({ playing: this.state.loop })\n  }\n\n  handleDuration = (duration) => {\n    console.log('onDuration', duration)\n    this.setState({ duration })\n  }\n\n  renderLoadButton = (url, label) => {\n    return (\n      <button onClick={() => this.load(url)}>\n        {label}\n      </button>\n    )\n  }\n\n  convertToSeconds(time) {\n    let arr = time.split(\":\")\n    var [minutes, seconds] = arr;\n    var totalSeconds = parseInt(minutes) * 60\n    totalSeconds += parseInt(seconds)\n    return totalSeconds\n  }\n\n  \n\n  ref = player => {\n    this.player = player\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.reply !== this.props.reply) {\n      if (this.props.reply.request === \"goToMarker\"){\n        this.player.seekTo(this.convertToSeconds(this.props.reply.time), \"seconds\")\n      }\n      else if (this.props.reply.request === \"goToLoop\") {\n        this.setState({inLoop: true})\n        console.log(this.state.inLoop)\n        this.player.seekTo(this.convertToSeconds(this.props.reply.startTime), \"seconds\")\n        \n        while (this.state.inLoop) {\n          console.log(\"inloop\")\n          if (this.player.getCurrentTime() >= this.convertToSeconds(this.props.reply.endTime)){\n            this.player.seekTo(this.convertToSeconds(this.props.reply.startTime), \"seconds\")\n          }\n        }\n      }\n    }\n    if (prevProps.url !== this.props.url){\n      console.log(this.props.url);\n      this.load(this.props.url);\n    }\n\n  }\n\n  render () {\n    const { url, playing, controls, light, volume, muted, loop, played, loaded, duration, playbackRate, pip, dictaphoneData, inLoop } = this.state\n    const SEPARATOR = ' · '\n\n    return (\n      \n      <div className='app'>\n        <section className='section'>\n          <h1>Bridge</h1>\n          <div className='player-wrapper'>\n            <ReactPlayer\n              ref={this.ref}\n              className='react-player'\n              url={url}\n              pip={pip}\n              playing={playing}\n              controls={controls}\n              light={light}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onReady={() => console.log('onReady')}\n              onStart={() => console.log('onStart')}\n              onPlay={this.handlePlay}\n              onEnablePIP={this.handleEnablePIP}\n              onDisablePIP={this.handleDisablePIP}\n              onPause={this.handlePause}\n              onBuffer={() => console.log('onBuffer')}\n              onPlaybackRateChange={this.handleOnPlaybackRateChange}\n              onSeek={e => console.log('onSeek', e)}\n              onEnded={this.handleEnded}\n              onError={e => console.log('onError', e)}\n              onProgress={this.handleProgress}\n              onDuration={this.handleDuration}\n            />\n          </div>\n          \n          \n\n          <Container>\n            <Row >\n              <Col lg={true} md={8}><input\n                      type='range' min={0} max={0.999999} step='any' style={{width: \"700px\"}}\n                      value={played}\n                      onMouseDown={this.handleSeekMouseDown}\n                      onChange={this.handleSeekChange}\n                      onMouseUp={this.handleSeekMouseUp}\n                    />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <button className=\"controlButton\" onClick={this.vocalRestart} value={15}>Restart</button>\n              <button className=\"controlButton\"  onClick={this.handleSkipBackwardClick} value={15}>Rewind 15s</button>\n              <button className=\"controlButton\"  onClick={this.handlePlayPause}>{playing ? 'Pause' : 'Play'}</button>\n              <button className=\"controlButton\"  onClick={this.handleSkipForwardClick} value={15}>Skip 15s</button>\n              <select className=\"controlButton\"  onChange={this.handleSetPlaybackRate} name=\"playback speed\" id=\"playbackSpeed\" >\n                <option value={0.25}>0.25x</option>\n                <option value={0.50}>0.50x</option>\n                <option value={0.75}>0.75x</option>\n                <option selected=\"selected\" value={1.00}>1.00x</option>\n                <option value={1.25}>1.25x</option>\n                <option value={1.50}>1.50x</option>\n                <option value={1.75}>1.75x</option>\n              </select>\n              \n              <div style={{marginTop: 15}}>\n              <input id=\"volume\" name=\"volume\" type='range' min={0} max={1} step='any' value={volume} onChange={this.handleVolumeChange}  />\n              <label for=\"volume\">Volume</label>\n              </div>\n\n              </Col>\n            </Row>\n          </Container>\n         \n                \n                  <label style={{marginRight: 10}}for=\"customUrl\"> New Youtube Url </label>\n                  <input id=\"customUrl\" ref={input => { this.urlInput = input }} type='text' placeholder='Enter URL' />\n                  <button onClick={() => this.setState({ url: this.urlInput.value })}>Load</button>\n               \n\n          <Dictaphone sendToPlayer={this.handleDictaphoneData}/>\n\n          \n        </section>\n        <footer className='footer'>\n         \n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Player;","import { useState, useEffect} from 'react'\nimport {Button, Container, Stack, Row, Col, CloseButton} from 'react-bootstrap';\nimport Circle from 'react-color'\nimport { CirclePicker } from 'react-color'\n\nfunction Loop(props){\n    const [title, setTitle] = useState(props.title);\n    const [colour, setColour] = useState(props.colour);\n    const [startTime, setStartTime] = useState(props.startTime);\n    const [endTime, setEndTime] = useState(props.endTime);\n\n    return (\n\n        <Container >\n                <Row>\n                    <span>{colour}</span>\n                    <Col>\n                    <span>{title}</span>\n                    <span> {startTime} {endTime}</span>\n                    </Col>\n\n                </Row>\n\n        </Container>\n    );\n}\nexport default Loop;","import { useState, useEffect} from 'react'\nimport Loop from './Loop'\nimport {Button, Container, Stack, Row, Col, CloseButton, Text, Form} from 'react-bootstrap';\n\n\nfunction LoopForm({submitLoop, onCancelLoop}){\n\n  const [title, setTitle] = useState();\n  const [colour, setColour] = useState();\n  const [startTime, setStartTime] = useState();\n  const [endTime, setEndTime] = useState();\n\n  const handleSubmit= (e) => {\n    submitLoop(title, colour, startTime, endTime)\n    e.preventDefault();\n\n  }\n\n  const handleCancelLoop = () => {\n    onCancelLoop();\n}\n\n\n  return(\n        <Form onSubmit={e => { handleSubmit(e) }}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control placeholder=\"Loop 1, Loop 2...\"\n              name='title'\n              type='text'\n              value={title} \n              onChange={ e => setTitle(e.target.value)}\n            />\n          </Form.Group>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col}>\n              <Form.Label>Start Time</Form.Label>\n              <Form.Control\n                name='startTime'\n                type='text'\n                value={startTime} \n                onChange={ e => setStartTime(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} className=\"mb-3\">\n              <Form.Label>End Time</Form.Label>\n              <Form.Control\n                name='endTime'\n                type='text'\n                value={endTime} \n                onChange={ e => setEndTime(e.target.value)}\n              />\n            </Form.Group>\n            <Button type='submit'>Submit Loop</Button>\n            <Button onClick={handleCancelLoop}>Cancel</Button>\n          </Row>\n        </Form>\n  );\n}\nexport default LoopForm;\n       \n       \n","import { useState, useEffect} from 'react'\nimport Loop from './Loop'\nimport LoopForm from './LoopForm'\nimport {Button, Container, Stack, Row, Col, CloseButton, Text, Form} from 'react-bootstrap';\n\n\nfunction LoopList(props){\n    const [loopItems, setLoopItems] = useState([])\n    const [showForm, setShowForm] = useState(false)\n\n   \n\n    const handleRemove = (key) => {\n        console.log(\"TEEEEST\", key)\n        setLoopItems(loopItems => loopItems.filter((item) => item.key !== key))\n    }\n    \n    const submitLoop = (title, colour, startTime, endTime) => {\n        setShowForm(false)\n        setLoopItems(loopItems => [...loopItems,\n        <li list-style=\"none\" key={title}>\n            <Row>\n                <Loop title={title} colour={colour} startTime={startTime} endTime={endTime}></Loop>\n                <CloseButton onClick={() => handleRemove(title)}></CloseButton>\n            </Row>\n        </li>])\n    }\n\n    const handleCancelLoop = () => {\n      setShowForm(false);\n  }\n\n    const handleGoToLoop = (key,request) => {\n      let sampleItem = loopItems.find(item => item.key === key)\n      console.log(sampleItem)\n      let foundItem = loopItems.find(item => item.key === key).props.children.props.children[0].props\n      let foundItemCopy =  Object.assign({request: request}, foundItem)\n      props.onFoundTimeElement(foundItemCopy);\n    }\n    useEffect(() => {\n      if (props.commandInformation.request.includes(\"marker\")){\n        return;\n      } \n      else if (props.commandInformation.request === \"addLoop\"){\n       submitLoop(props.commandInformation.name, \"colour\", props.commandInformation.firstTimeStamp, props.commandInformation.secondTimeStamp)\n      }\n       else if (props.commandInformation.request === \"delLoop\"){\n        handleRemove(props.commandInformation.name)\n      }\n      else if (props.commandInformation.request === \"goToLoop\") {\n        handleGoToLoop(props.commandInformation.name, props.commandInformation.request)\n\n      }\n      return () => {\n      }\n    }, [props.commandInformation])\n\n\n    const addLoop = () => {\n        setShowForm(true)\n    }\n\n    return (\n      <div style={{height: 80, width:300, float:'left'}}>\n      <Container>\n        {!showForm && (\n          <ul>\n            {loopItems}\n            <Button onClick={addLoop}>Add Loop</Button>\n          </ul>\n        )}\n        {showForm && (\n            <div>\n                <LoopForm submitLoop={submitLoop} onCancelLoop={handleCancelLoop}></LoopForm>\n            </div>\n        )}\n        \n      </Container>\n      </div>\n    );\n}\nexport default LoopList;","import { useState, useEffect} from 'react'\nimport {Button, Container, Stack, Row, Col, CloseButton} from 'react-bootstrap';\nimport Circle from 'react-color'\nimport { CirclePicker } from 'react-color'\n\nfunction Marker(props){\n    const [title, setTitle] = useState(props.title);\n    const [colour, setColour] = useState(props.colour);\n    const [time, setTime] = useState(props.time);\n\n    return (\n\n        <Container >\n                <Row>\n                    <span>{colour}</span>\n                    <Col>\n                    <span>{title}</span>\n                    <span> {time}</span>\n                    </Col>\n\n                </Row>\n\n        </Container>\n    );\n}\nexport default Marker;","import { useState, useEffect} from 'react'\nimport Marker from './Marker'\nimport {Button, Container, Stack, Row, Col, CloseButton, Text, Form} from 'react-bootstrap';\n\n\nfunction MarkerForm({submitMarker, onCancelMarker}){\n\n  const [title, setTitle] = useState();\n  const [colour, setColour] = useState();\n  const [time, setTime] = useState();\n\n  const handleSubmit= (e) => {\n    submitMarker(title, colour, time)\n    e.preventDefault();\n\n  }\n\n    const handleCancelMarker = () => {\n        onCancelMarker();\n    }\n\n  return(\n        <Form onSubmit={e => { handleSubmit(e) }}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control placeholder=\"Marker 1, Marker 2...\"\n              name='title'\n              type='text'\n              value={title} \n              onChange={ e => setTitle(e.target.value)}\n            />\n          </Form.Group>\n          <Row className=\"mb-3\">\n            <Form.Group as={Col}>\n              <Form.Label>Time</Form.Label>\n              <Form.Control\n                name='time'\n                type='text'\n                value={time} \n                onChange={ e => setTime(e.target.value)}\n              />\n            </Form.Group>  \n                <Button type='submit'>Submit Marker</Button>\n                <Button onClick={handleCancelMarker}>Cancel </Button>\n          </Row>\n        </Form>\n  );\n}\nexport default MarkerForm;\n       \n       \n","import { useState, useEffect} from 'react'\nimport Marker from './Marker'\nimport MarkerForm from './MarkerForm'\nimport {Button, Container, Stack, Row, Col, CloseButton, Text, Form} from 'react-bootstrap';\n\n\nfunction MarkerList(props){\n    const [markerItems, setMarkerItems] = useState([])\n    const [showForm, setShowForm] = useState(false)\n\n    const handleCancelMarker = () => {\n        setShowForm(false);\n    }\n\n\n    const handleRemove = (key) => {\n        setMarkerItems(markerItems => markerItems.filter((item) => item.key !== key))\n    }\n\n    const submitMarker = (title, colour, time) => {\n        setShowForm(false)\n        setMarkerItems(markerItems => [...markerItems,\n        <li list-style=\"none\" key={title}>\n            <Row>\n                <Marker title={title} colour={colour} time={time}></Marker>\n                <CloseButton onClick={() => handleRemove(title)}></CloseButton>\n            </Row>\n        </li>])\n    }\n\n    const handleGoToMarker = (key,request) => {\n      let foundItem = markerItems.find(item => item.key === key).props.children.props.children[0].props\n      let foundItemCopy =  Object.assign({request: request}, foundItem)\n      props.onFoundTimeElement(foundItemCopy);\n    }\n\n    useEffect(() => {\n      if (props.commandInformation.request.includes(\"loop\")) return;\n      else if (props.commandInformation.request === \"addMarker\"){\n       submitMarker(props.commandInformation.name, \"colour\", props.commandInformation.firstTimeStamp);\n      } else if (props.commandInformation.request === \"delMarker\"){\n        handleRemove(props.commandInformation.name)\n      } else if (props.commandInformation.request === \"goToMarker\"){\n          handleGoToMarker(props.commandInformation.name, props.commandInformation.request);       \n      } \n    }, [props.commandInformation])\n\n    const addMarker = () => {\n        setShowForm(true)\n    }\n    \n\n    return (\n      <div style={{height: 70, width: 300, float:'right'}}>\n      <Container>\n        {!showForm && (\n          <ul>\n            {markerItems}\n            <Button onClick={addMarker}>Add Marker</Button>\n          </ul>\n        )}\n        {showForm && (\n            <div style={{marginTop: 20}}>\n                <MarkerForm submitMarker={submitMarker} onCancelMarker={handleCancelMarker}></MarkerForm>\n            </div>\n        )}\n\n      </Container>\n      </div>\n    );\n}\nexport default MarkerList;","import {Button, Row, Col, Modal} from 'react-bootstrap'\n\nfunction InfoModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Command Information\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n          <h4>Commands that should be done using voice (voice commands must be issued exactly like the following to work)</h4>\n          <h6> <b>Note that the words with colons in front of them represent values that you will choose.\n                  In addition, all of the following commands can be done without voice input </b></h6> \n          <p>\n            Add marker at a specific time = <em>'add marker called :name at :min minutes and :sec seconds'</em><br/>\n            Add a loop that from one time stamp to another =<em> 'Add loop called :name from :firstMin minutes and :firstSec seconds until :secondMin minutes and :secondSec seconds'</em><br/>\n            Delete a marker by its name = <em>'Delete marker called :name'</em><br/>\n            Skip 15 seconds ahead = <em>'skip forward'</em> <br/>\n            Rewind 15 seconds = <em>'skip backwards'</em> <br/>\n            Restart the song = <em>'restart' </em><br/>\n            Jump to marker timestamp = <em>'go to marker :name'</em> <br/>\n            Jump to loop and repeatedly perform desired loop : <em>'go to loop :name'</em> <br/>\n            Exit loop = <em>'exit loop' </em><br/>\n            Pause = <em>'pause'</em>\n            Pause = <em>'play'</em>\n          </p>\n          <h4>Commands that should be done without voice commands</h4>\n          <p>\n          Change Volume <br/>\n          Change Playback Rate <br/>\n          Change Song URL <br/>\n\n          </p>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\nexport default InfoModal;","import logo from './logo.svg';\nimport './App.css';\nimport Dictaphone from './components/dictaphone';\nimport Player from './components/players/player';\nimport LoopList from './components/LoopList.js'\nimport MarkerList from './components/MarkerList.js'\nimport {Row, Col, Modal, Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {useState} from 'react'\nimport InfoModal from './components/InfoModal.js'\nimport LandingPage from './components/LandingPage.js'\n\nfunction App() {\n  \n  const [fullscreenLandingPage, setFullscreenLandingPage] = useState(true);\n  const [showLandingPage, setShowLandingPage] = useState(true);\n  const [url, setUrl] = useState();\n  const [urlInput, setUrlInput] = useState();\n\n  const [command, setCommandState] = useState({\n    request: '',\n    name: '',\n    firstTimeStamp: '',\n    secondTimeStamp: ''\n  })\n\n  const [reply, setReplyState] = useState({\n    request: '',\n    name: '',\n    firstTimeStamp: '',\n    secondTimeStamp: ''\n  })\n\n  const [infoModalShow, setInfoModalShow] = useState(false);\n  const handleInfoModalClose = () => setInfoModalShow(false);\n  const handleInfoModalShow = () => setInfoModalShow(true);\n\n  function handleFoundTimeElement(reply){\n    setReplyState(reply);\n  }\n\n  function handleCommandChange(message){\n    setCommandState(command => message)\n  }\n\n  function handleSubmitUrl(){\n    setShowLandingPage(false)\n    setUrl(urlInput.value);\n  }\n  return (\n    <div>\n      {showLandingPage && (\n        <Modal\n          show={showLandingPage}\n          fullscreen={fullscreenLandingPage}\n          onHide={() => setShowLandingPage(false)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Modal</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Modal body content\n\n          <th>Custom URL</th>\n                <td>\n                  <input ref={input => { setUrlInput(input) }} type='text' placeholder='Enter URL' />\n                  <button onClick={ handleSubmitUrl }> Load</button>\n          </td>\n          </Modal.Body>\n        </Modal>\n      )}\n      {true && (\n        <div className=\"App\">\n          <Button variant=\"primary\" onClick={() => setInfoModalShow(true)}>\n            Info\n          </Button>\n          <InfoModal\n            show={infoModalShow}\n            onHide={() => setInfoModalShow(false)}\n          />\n          <Row>\n            <Col>\n              <LoopList\n                commandInformation={command}\n                onFoundTimeElement={handleFoundTimeElement}\n              ></LoopList>\n            </Col>\n            <Col>\n              <MarkerList\n                commandInformation={command}\n                onFoundTimeElement={handleFoundTimeElement}\n              ></MarkerList>\n            </Col>\n          </Row>\n          <Player onCommandChange={handleCommandChange} reply={reply} url={url}/>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}